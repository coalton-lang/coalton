================================================================================
100 recursively-construct-via-non-constructor-function
================================================================================

(package coalton-unit-tests/recursive-let)

(declare flipped-cons (List :elt -> :elt -> List :elt))
(define (flipped-cons list new-head)
  (Cons new-head list))
(declare make-loop (:elt -> List :elt))
(coalton:define (make-loop elt)
  (coalton:let ((loop (flipped-cons loop elt))) loop))

--------------------------------------------------------------------------------

error: Invalid recursive bindings
  --> test:8:17
   |
 8 |    (coalton:let ((loop (flipped-cons loop elt))) loop))
   |                   ^^^^ invalid recursive variable bindings

================================================================================
101 recursively-construct-bad-repr-types
================================================================================

(package coalton-unit-tests/recursive-let)

(repr :transparent)
(define-type (MyLoop :elt) (MyLoop (MyLoop :elt)))
(declare make-loop (Unit -> (MyLoop :any)))
(define (make-loop)
  (let ((loop (MyLoop loop))) loop))

--------------------------------------------------------------------------------

error: Invalid recursive bindings
  --> test:7:9
   |
 7 |    (let ((loop (MyLoop loop))) loop))
   |           ^^^^ invalid recursive variable bindings

================================================================================
102 recursively-construct-bad-repr-types
================================================================================

(package coalton-unit-tests/recursive-let)

(repr :native (cl:or cl:null mynullableloop))
(define-type (MyNullableLoop :elt)
  (NonNull :elt)
  (MyLoop (MyNullableLoop :elt)))
(declare make-loop (Unit -> (MyNullableLoop :any)))
(define (make-loop)
  (let ((lp (MyLoop lp)))
    lp)))

--------------------------------------------------------------------------------

error: Invalid recursive bindings
  --> test:9:9
   |
 9 |    (let ((lp (MyLoop lp)))
   |           ^^ invalid recursive variable bindings

================================================================================
103 recursive-partial-constructor-application
================================================================================

(package coalton-unit-tests/recursive-let)

(define-type (PairedLoop :elt)
  (PairedLoop (:elt coalton:-> (PairedLoop :elt)) :elt))
(declare make-partial-loop (Unit -> :elt -> (PairedLoop :elt)))
(define (make-partial-loop)
  (let ((lp (PairedLoop lp))) lp))

--------------------------------------------------------------------------------

error: Invalid recursive bindings
  --> test:7:9
   |
 7 |    (let ((lp (PairedLoop lp))) lp))
   |           ^^ invalid recursive variable bindings

================================================================================
104 recursive-indirect-constructor-application
================================================================================

(package coalton-unit-tests/recursive-let)

(define-type (MyLoop :elt) (MyLoop (MyLoop :elt)))
(declare make-circular-list-with-deranged-shadowing (:elt -> (List :elt)))
(define (make-circular-list-with-deranged-shadowing elt)
  (let ((MyLoop Cons))
    (let ((lp (MyLoop elt lp)))
      lp)))

--------------------------------------------------------------------------------

error: Invalid recursive bindings
  --> test:7:11
   |
 7 |      (let ((lp (MyLoop elt lp)))
   |             ^^ invalid recursive variable bindings

================================================================================
105 mutually-recursive-data-and-function
================================================================================

(package coalton-unit-tests/recursive-let)

(define-type LoopFn
  (LoopFn (coalton:Unit coalton:-> LoopFn)))
(declare make-loop-fn (Unit -> LoopFn))
  (define (make-loop-fn)
    (let ((lp (LoopFn func))
                (func (fn () lp)))
      lp)))

--------------------------------------------------------------------------------

error: Invalid recursive bindings
  --> test:8:17
   |
 7 |      (let ((lp (LoopFn func))
   |             -- with definition
 8 |                  (func (fn () lp)))
   |                   ^^^^ function can not be defined recursively with variables
